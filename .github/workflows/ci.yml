name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (frontend)
        working-directory: ./frontend
        run: npm ci

      - name: Run lint (frontend)
        working-directory: ./frontend
        run: npm run lint

      - name: Run tests (frontend)
        working-directory: ./frontend
        run: npm test -- --watch=false
        continue-on-error: true

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Install dependencies (CDK)
        working-directory: ./backend
        run: npm ci

      - name: Synth CDK stack
        working-directory: ./backend
        run: npx cdk synth

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (CDK)
        working-directory: ./backend
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Deploy CDK stack
        working-directory: ./backend
        run: npx cdk deploy --all --require-approval never

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (frontend)
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Get S3 bucket name from CDK outputs
        id: get-bucket
        working-directory: ./backend
        run: |
          BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name RecipeMatcherStatelessStack --query "Stacks[0].Outputs[?OutputKey=='FrontendBucketName'].OutputValue" --output text)
          echo "bucket-name=$BUCKET_NAME" >> $GITHUB_OUTPUT

      - name: Get CloudFront distribution ID from CDK outputs
        id: get-distribution
        working-directory: ./backend
        run: |
          DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name RecipeMatcherStatelessStack --query "Stacks[0].Outputs[?OutputKey=='FrontendDistributionId'].OutputValue" --output text)
          echo "distribution-id=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT

      - name: Deploy to S3
        run: |
          aws s3 sync ./frontend/dist/ s3://${{ steps.get-bucket.outputs.bucket-name }} --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ steps.get-distribution.outputs.distribution-id }} --paths "/*"
